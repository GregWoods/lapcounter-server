# This is for LIVE use, and will usually mean there is WiFi but no Internet connection.
# To update the images you will need to connect to the internet, and run:
# sudo docker compose -f compose.prod.yaml pull

services:

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    volumes:
      - ./mosquitto:/mosquitto
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
      - 8080:8080
      - 9001:9001
    restart: unless-stopped

  gpio-lane1:
    image: gregkwoods/lapcounter-server-gpio:latest
    pull_policy: never
    env_file:
      - .env.prod
    environment:
      - LANE_NUMBER=1
    container_name: gpio-1
    privileged: true
    restart: unless-stopped
    depends_on:
      - mosquitto  


  gpio-lane2:
    image: gregkwoods/lapcounter-server-gpio:latest
    pull_policy: never
    env_file:
      - .env.prod
    environment:
      - LANE_NUMBER=2
    container_name: gpio-2
    privileged: true
    restart: unless-stopped
    depends_on:
      - gpio-lane1


  lapdata:
    image: gregkwoods/lapcounter-server-lapdata:latest
    pull_policy: never
    env_file:
      - .env.prod
    container_name: lapdata
    restart: unless-stopped
    depends_on:
      - gpio-lane2


  web:
    profiles: ["disabled"]
    image: gregkwoods/lapcounter-server-web:latest
    pull_policy: never
    command: gunicorn --bind 0.0.0.0:5000 manage:app
    volumes:
      - static_volume:/home/app/web/project/static
      - media_volume:/home/app/web/project/media
    expose:
      - 5000
    env_file:
      - ./.env.prod
    depends_on:
      - db

  react:
    container_name: react
    image: gregkwoods/lapcounter-server-react:latest
    pull_policy: never
    ports:
      - 8087:80
    volumes:
      - static_volume:/usr/src/app/dist
    #for debugging. Use docker compose "run" instead of "up"
    #restart: unless-stopped
    #entrypoint: /bin/sh


  api:
    container_name: api
    image: gregkwoods/lapcounter-server-api:latest
    ports:
      - "8000:8000"
    #env_file:
    #  - ./api/.env.prod
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONBUFFERED=1


  nginx:
    profiles: ["disabled"]
    container_name: nginx
    volumes:
      - static_volume:/home/app/web/project/static
      - media_volume:/home/app/web/project/media
    ports:
      - 1337:80


  db:
    profiles: ["disabled"]
    container_name: db
    image: postgres:16
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db


volumes:
  postgres_data_prod:
  static_volume:
  media_volume:
