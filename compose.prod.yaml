# This is for LIVE use, and will usually mean there is WiFi but no Internet connection.
# To update the images you will need to connect to the internet, and run:
# sudo docker compose -f compose.prod.yaml pull

services:

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    volumes:
      - ./mosquitto:/mosquitto
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
      - 8080:8080
      - 9001:9001
    restart: unless-stopped

  gpio-lane1:
    image: gregkwoods/lapcounter-server-gpio:latest
    pull_policy: never
    env_file:
      - .env.production
    environment:
      - LANE_NUMBER=1
      - MQTT_HOSTNAME="mosquitto"
    container_name: gpio-1
    privileged: true
    restart: unless-stopped
    depends_on:
      - mosquitto  


  gpio-lane2:
    image: gregkwoods/lapcounter-server-gpio:latest
    pull_policy: never
    env_file:
      - ./gpio/.env.production
    environment:
      - LANE_NUMBER=2
      - MQTT_HOSTNAME="mosquitto"
    container_name: gpio-2
    privileged: true
    restart: unless-stopped
    depends_on:
      - gpio-lane1


  lapdata:
    image: gregkwoods/lapcounter-server-lapdata:latest
    pull_policy: never
    environment:
      - MQTT_HOSTNAME="mosquitto"
      - MINIMUM_LAP_TIME="4"
    container_name: lapdata
    restart: unless-stopped
    depends_on:
      - gpio-lane2


  react:
    # uses an nginx based image in production
    container_name: react
    image: gregkwoods/lapcounter-server-react:latest
    pull_policy: never
    ports:
      - 8088:80
    #unsure if this needed, or the env params are baked into the npm build
    env_file:
      - ./react/.env.production
    #volumes:
    #  - static_volume:/usr/src/app/dist
    restart: unless-stopped


  api:
    container_name: api
    image: gregkwoods/lapcounter-server-api:latest
    pull_policy: never
    ports:
      - "8000:8000"
    env_file:
      - ./api/.env.production
    environment:
      - API_URL="http://192.168.8.3:8000"
      - REACT_URL="http://192.168.8.3:8080"
      - MEDIA_FOLDER="/media"
      - CARS_MEDIA_FOLDER="/media/cars"
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONBUFFERED=1
    restart: unless-stopped


  db:
    profiles: ["disabled"]
    container_name: db
    image: postgres:16
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    env_file:
      - ./db/.env.production.db


volumes:
  postgres_data_prod:
  static_volume:
