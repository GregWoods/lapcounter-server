# Now using separate compose files for dev and production

services:

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    volumes:
      - ./mosquitto:/mosquitto
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
      - 8080:8080
      - 9001:9001
    restart: unless-stopped


  mocked-gpio:
    image: gregkwoods/lapcounter-server-mocked-gpio:latest
    pull_policy: always
    build: 
      context: ./gpio
      dockerfile: Dockerfile.Mocked
    env_file:
      - .env.dev
    container_name: mocked-gpio
    depends_on:
      - mosquitto


  lapdata:
    image: gregkwoods/lapcounter-server-lapdata:latest
    pull_policy: always
    env_file:
      - .env.dev
    build: ./lapdata
    container_name: lapdata
    depends_on:
      - mocked-gpio


  #http://localhost:5001/upload
  #http://localhost:5001/media/<uploaded_file_name>
  #http://localhost:5001/static/hello.txt
  api:
    container_name: api
    pull_policy: always
    build: ./api
    image: gregkwoods/lapcounter-server-api:latest
    volumes:
      - ./api/:/usr/src/app/
    ports:
      - 5001:5000
    command: python manage.py run -h 0.0.0.0
    env_file:
      - ./api/.env.dev
  #  depends_on:
  #    - lapdata


    

  react:
    container_name: react
    pull_policy: always
    build: 
      context: ./react
      dockerfile: Dockerfile.dev
    volumes:
      - ./react:/app
      - /app/node_modules
    #image: gregkwoods/lapcounter-server-react:latest
    #volumes:
    #  - ./web:/usr/src/app
    ports:
      - 8088:5173
    env_file:
      - ./.env.dev



  db:
    container_name: db
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      # only for local dev. Production uses .env.prod.db
      POSTGRES_USER: hello_flask
      POSTGRES_PASSWORD: hello_flask
      POSTGRES_DB: hello_flask_dev


  #nginx-proxy-manager:
  #  image: 'jc21/nginx-proxy-manager:latest'
  #  restart: unless-stopped
  #  ports:
  #    # These ports are in format <host-port>:<container-port>
  #    - '80:80' # Public HTTP Port
  #    - '443:443' # Public HTTPS Port
  #    - '81:81' # Admin Web Port
  #  volumes:
  #    - ./data:/data
  #    - ./letsencrypt:/etc/letsencrypt

  test-mqtt-latency:
    profiles: ["disabled"]
    env_file:
      - .env.dev
    image: gregkwoods/lapcounter-server-test-mqtt-latency:latest
    build: ./test-mqtt-latency
    container_name: test-mqtt-latency
    depends_on:
      - mosquitto


  portainer:
    profiles: ["disabled"]
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    ports:
      - 9000:9000
      - 8000:8000
        #- 9443:9443
    volumes:
      - ./portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock


volumes:
  postgres_data:

#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt
